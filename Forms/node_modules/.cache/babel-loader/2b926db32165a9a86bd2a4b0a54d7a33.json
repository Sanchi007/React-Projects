{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HI\\\\OneDrive\\\\Documents\\\\React Projects\\\\Forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport UseInput from \"../hooks/UseInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    hasError: firstNameHasError,\n    valueIsValid: firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = UseInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    hasError: lastNameHasError,\n    valueIsValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = UseInput(value => value.trim() !== \"\");\n  const validEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const {\n    value: enteredEmail,\n    hasError: emailHasError,\n    valueIsValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = UseInput(value => value.match(validEmail));\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [firstNameIsValid, lastNameIsValid, emailIsValid]);\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  const fNameInputClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lNameInputClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: fNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredFirstName,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: enteredLastName,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"SiwxkdMI1lKVuLYae58e/OJfj3Y=\");\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useEffect","useState","UseInput","BasicForm","props","value","enteredFirstName","hasError","firstNameHasError","valueIsValid","firstNameIsValid","valueChangeHandler","firstNameChangeHandler","valueBlurHandler","firstNameBlurHandler","reset","resetFirstName","trim","enteredLastName","lastNameHasError","lastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","resetLastName","validEmail","enteredEmail","emailHasError","emailIsValid","emailChangeHandler","emailBlurHandler","resetEmail","match","formIsValid","setFormIsValid","formSubmitHandler","event","preventDefault","fNameInputClasses","lNameInputClasses","emailInputClasses"],"sources":["C:/Users/HI/OneDrive/Documents/React Projects/Forms/src/components/BasicForm.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport UseInput from \"../hooks/UseInput\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    hasError: firstNameHasError,\n    valueIsValid: firstNameIsValid,\n    valueChangeHandler: firstNameChangeHandler,\n    valueBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = UseInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredLastName,\n    hasError: lastNameHasError,\n    valueIsValid: lastNameIsValid,\n    valueChangeHandler: lastNameChangeHandler,\n    valueBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = UseInput((value) => value.trim() !== \"\");\n  const validEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const {\n    value: enteredEmail,\n    hasError: emailHasError,\n    valueIsValid: emailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    valueBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = UseInput((value) => value.match(validEmail));\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [firstNameIsValid, lastNameIsValid, emailIsValid]);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const fNameInputClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n    const lNameInputClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n    const emailInputClasses = emailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={fNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredFirstName}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p className=\"error-text\">First name must not be empty</p>}\n        </div>\n        <div className={lNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={enteredLastName}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && <p className=\"error-text\">Last name must not be empty</p>}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && <p className=\"error-text\">Enter a valid email</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}