{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useReducer, useState } from \"react\";\nconst initialInputState = {\n  value: \"\",\n  isTouched: false\n};\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return {\n      value: action.value,\n      isTouched: state.isTouched\n    };\n  }\n  if (action.type === \"BLUR\") {\n    return {\n      value: state.value,\n      isTouched: true\n    };\n  }\n  if (action.type === \"RESET\") {\n    return {\n      value: \"\",\n      isTouched: false\n    };\n  }\n  return initialInputState;\n};\nconst UseInput = validateValue => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n  const valueChangeHandler = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n  const valueBlurHandler = () => {\n    dispatch({\n      type: \"BLUR\"\n    });\n  };\n  const reset = () => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n  return {\n    value: inputState.value,\n    hasError,\n    valueIsValid,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  };\n};\n_s(UseInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n_c = UseInput;\nexport default UseInput;\n\n// import React, { useState } from \"react\";\n\n// const UseInput = (validateValue) => {\n//   const [enteredValue, setEnteredValue] = useState(\"\");\n//   const [isTouched, setIsTouched] = useState(false);\n\n//   const valueIsValid = validateValue(enteredValue);\n//   const hasError = !valueIsValid && isTouched;\n//   const valueChangeHandler = (event) => {\n//     setEnteredValue(event.target.value);\n//   };\n//   const inputBlurHandler = () => {\n//     setIsTouched(true);\n//   };\n//   const reset = () => {\n//     setEnteredValue(\"\");\n//     setIsTouched(false);\n//   };\n//   return {\n//     value: enteredValue,\n//     isValid: valueIsValid,\n//     hasError,\n//     valueChangeHandler,\n//     inputBlurHandler,\n//     reset\n//   };\n// };\n\n// export default UseInput;\nvar _c;\n$RefreshReg$(_c, \"UseInput\");","map":{"version":3,"names":["React","useReducer","useState","initialInputState","value","isTouched","inputStateReducer","state","action","type","UseInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","valueBlurHandler","reset"],"sources":["C:/Users/HI/OneDrive/Documents/React Projects/Forms/src/hooks/UseInput.js"],"sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nconst initialInputState = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\nconst inputStateReducer = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return {\r\n      value: action.value,\r\n      isTouched: state.isTouched,\r\n    };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return {\r\n      value: state.value,\r\n      isTouched: true,\r\n    };\r\n  }\r\n  if (action.type === \"RESET\") {\r\n    return {\r\n      value: \"\",\r\n      isTouched: false,\r\n    };\r\n  }\r\n  return initialInputState;\r\n};\r\nconst UseInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(\r\n    inputStateReducer,\r\n    initialInputState\r\n  );\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n  const valueBlurHandler = () => {\r\n    dispatch({ type: \"BLUR\" });\r\n  };\r\n  const reset = () => {\r\n    dispatch({ type: \"RESET\" });\r\n  };\r\n  return {\r\n    value: inputState.value,\r\n    hasError,\r\n    valueIsValid,\r\n    valueChangeHandler,\r\n    valueBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default UseInput;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const UseInput = (validateValue) => {\r\n//   const [enteredValue, setEnteredValue] = useState(\"\");\r\n//   const [isTouched, setIsTouched] = useState(false);\r\n\r\n//   const valueIsValid = validateValue(enteredValue);\r\n//   const hasError = !valueIsValid && isTouched;\r\n//   const valueChangeHandler = (event) => {\r\n//     setEnteredValue(event.target.value);\r\n//   };\r\n//   const inputBlurHandler = () => {\r\n//     setIsTouched(true);\r\n//   };\r\n//   const reset = () => {\r\n//     setEnteredValue(\"\");\r\n//     setIsTouched(false);\r\n//   };\r\n//   return {\r\n//     value: enteredValue,\r\n//     isValid: valueIsValid,\r\n//     hasError,\r\n//     valueChangeHandler,\r\n//     inputBlurHandler,\r\n//     reset\r\n//   };\r\n// };\r\n\r\n// export default UseInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE;AACb,CAAC;AACD,MAAMC,iBAAiB,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC3C,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MACLL,KAAK,EAAEI,MAAM,CAACJ,KAAK;MACnBC,SAAS,EAAEE,KAAK,CAACF;IACnB,CAAC;EACH;EACA,IAAIG,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;IAC1B,OAAO;MACLL,KAAK,EAAEG,KAAK,CAACH,KAAK;MAClBC,SAAS,EAAE;IACb,CAAC;EACH;EACA,IAAIG,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;IAC3B,OAAO;MACLL,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;IACb,CAAC;EACH;EACA,OAAOF,iBAAiB;AAC1B,CAAC;AACD,MAAMO,QAAQ,GAAIC,aAAa,IAAK;EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGZ,UAAU,CACvCK,iBAAiB,EACjBH,iBAAiB,CAClB;EAED,MAAMW,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACR,KAAK,CAAC;EACpD,MAAMW,QAAQ,GAAG,CAACD,YAAY,IAAIF,UAAU,CAACP,SAAS;EAEtD,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;IACpCJ,QAAQ,CAAC;MAAEJ,IAAI,EAAE,OAAO;MAAEL,KAAK,EAAEa,KAAK,CAACC,MAAM,CAACd;IAAM,CAAC,CAAC;EACxD,CAAC;EACD,MAAMe,gBAAgB,GAAG,MAAM;IAC7BN,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAO,CAAC,CAAC;EAC5B,CAAC;EACD,MAAMW,KAAK,GAAG,MAAM;IAClBP,QAAQ,CAAC;MAAEJ,IAAI,EAAE;IAAQ,CAAC,CAAC;EAC7B,CAAC;EACD,OAAO;IACLL,KAAK,EAAEQ,UAAU,CAACR,KAAK;IACvBW,QAAQ;IACRD,YAAY;IACZE,kBAAkB;IAClBG,gBAAgB;IAChBC;EACF,CAAC;AACH,CAAC;AAAC,GA1BIV,QAAQ;AAAA,KAARA,QAAQ;AA4Bd,eAAeA,QAAQ;;AAEvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}