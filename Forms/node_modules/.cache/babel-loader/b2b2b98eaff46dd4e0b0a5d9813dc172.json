{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HI\\\\OneDrive\\\\Documents\\\\React Projects\\\\Forms\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UseInput from \"../hooks/UseInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = UseInput(value => value.trim() !== \"\");\n  const validEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = UseInput(value => value.match(validEmail));\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid, enteredEmailIsValid]);\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    resetNameInput();\n    resetEmailInput();\n  };\n  const nameInputClasses = nameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"SiwxkdMI1lKVuLYae58e/OJfj3Y=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useEffect","useState","UseInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","isValid","enteredNameIsValid","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","validEmail","enteredEmail","emailInputHasError","enteredEmailIsValid","emailChangeHandler","emailBlurHandler","resetEmailInput","match","formIsValid","setFormIsValid","formSubmitHandler","event","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["C:/Users/HI/OneDrive/Documents/React Projects/Forms/src/components/SimpleInput.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport UseInput from \"../hooks/UseInput\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput,\n  } = UseInput((value) => value.trim() !== \"\");\n\n  const validEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  const {\n    value: enteredEmail,\n    hasError: emailInputHasError,\n    isValid: enteredEmailIsValid,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = UseInput((value) => value.match(validEmail));\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    if (enteredNameIsValid && enteredEmailIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid, enteredEmailIsValid]);\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    resetNameInput();\n    resetEmailInput();\n  };\n\n  const nameInputClasses = nameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailInputClasses = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n        />\n        {nameInputHasError && (\n          <p className=\"error-text\">Name must not be empty</p>\n        )}\n      </div>\n\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Enter a valid email</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,mBAAmB;AAAC;AAEzC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM;IACJC,KAAK,EAAEC,WAAW;IAClBC,QAAQ,EAAEC,iBAAiB;IAC3BC,OAAO,EAAEC,kBAAkB;IAC3BC,kBAAkB,EAAEC,iBAAiB;IACrCC,gBAAgB,EAAEC,eAAe;IACjCC,KAAK,EAAEC;EACT,CAAC,GAAGd,QAAQ,CAAEG,KAAK,IAAKA,KAAK,CAACY,IAAI,EAAE,KAAK,EAAE,CAAC;EAE5C,MAAMC,UAAU,GAAG,+CAA+C;EAClE,MAAM;IACJb,KAAK,EAAEc,YAAY;IACnBZ,QAAQ,EAAEa,kBAAkB;IAC5BX,OAAO,EAAEY,mBAAmB;IAC5BV,kBAAkB,EAAEW,kBAAkB;IACtCT,gBAAgB,EAAEU,gBAAgB;IAClCR,KAAK,EAAES;EACT,CAAC,GAAGtB,QAAQ,CAAEG,KAAK,IAAKA,KAAK,CAACoB,KAAK,CAACP,UAAU,CAAC,CAAC;EAEhD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,IAAIU,kBAAkB,IAAIW,mBAAmB,EAAE;MAC7CM,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM;MACLA,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACjB,kBAAkB,EAAEW,mBAAmB,CAAC,CAAC;EAE7C,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI,CAACpB,kBAAkB,IAAI,CAACW,mBAAmB,EAAE;MAC/C;IACF;IAEAU,OAAO,CAACC,GAAG,CAAC1B,WAAW,CAAC;IACxBU,cAAc,EAAE;IAChBQ,eAAe,EAAE;EACnB,CAAC;EAED,MAAMS,gBAAgB,GAAGzB,iBAAiB,GACtC,sBAAsB,GACtB,cAAc;EAClB,MAAM0B,iBAAiB,GAAGd,kBAAkB,GACxC,sBAAsB,GACtB,cAAc;EAClB,oBACE;IAAM,QAAQ,EAAEQ,iBAAkB;IAAA,wBAChC;MAAK,SAAS,EAAEK,gBAAiB;MAAA,wBAC/B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QACE,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAErB,iBAAkB;QAC5B,MAAM,EAAEE,eAAgB;QACxB,KAAK,EAAER;MAAY;QAAA;QAAA;QAAA;MAAA,QACnB,EACDE,iBAAiB,iBAChB;QAAG,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eAEN;MAAK,SAAS,EAAE0B,iBAAkB;MAAA,wBAChC;QAAO,OAAO,EAAC,OAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACzC;QACE,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,QAAQ,EAAEZ,kBAAmB;QAC7B,MAAM,EAAEC,gBAAiB;QACzB,KAAK,EAAEJ;MAAa;QAAA;QAAA;QAAA;MAAA,QACpB,EACDC,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1B;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC3B;QAAQ,QAAQ,EAAE,CAACM,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAgB;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAlFIvB,WAAW;AAAA,KAAXA,WAAW;AAoFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}